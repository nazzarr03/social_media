version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres

  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URL: ${RABBITMQ_URL}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_SMTP_SERVER: ${EMAIL_SMTP_SERVER}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
    depends_on:
      - rabbitmq
    networks:
      - postgres

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - postgres
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - xpack.security.http.ssl.enabled=false
    ports:
      - "9200:9200"
    networks:
      - postgres

  logger:
    container_name: logger
    build:
      context: ./logger
    ports:
      - "8082:8282"
    depends_on:
      - elasticsearch
    networks:
      - postgres
  
  social_media:
    container_name: social_media
    build:
      context: ./socialMedia
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - postgres

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - elasticsearch
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  pgadmin-data:
  postgres: